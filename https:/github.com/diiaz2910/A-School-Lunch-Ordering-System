//Libraries declaration
#include <fstream>
#include <iostream>
#include <string>
#include <cmath>
#include <stdio.h>
#include <conio.h>
#include <locale.h>



using namespace std;

//Prototype of functions
void init();
void login();
void regUser();
int veriUser(string user);
void editUser();
void deleteUser();
void checkUser();
void adminOptions();
void guestOptions();
void food();
void showMenu();
void showPayments();
void showDiscount();
void guestOptions();


int main (){
    setlocale(LC_CTYPE,"Spanish");
	system("COLOR 70");
	init();

	return 0;
}

void init(){
	int op, error = 0;
	string usr, key;

	do{
		system("cls");
		cout << "\t\t\t\t\t     =======================================" << endl;
		cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM    " << endl;
		cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
		cout << "MAIN MENU" << endl;
		cout << "--------------" << endl << endl;
		cout << "1. Login" << endl << endl;
		cout << "2. Users" << endl << endl;
		cout << "3. Close Program" << endl << endl;
		cout << "Choose an option: ";
		cin >> op;
	}while(op < 0 || op > 3);
	cin.ignore();

	if(op == 1){
		login();
	}

	if(op == 2){
		do{
			system("cls");
			cout << "\t\t\t\t\t     =======================================" << endl;
			cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
			cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
			cout << "USERS MENU" << endl;
			cout << "-------------" << endl << endl;
			cout << "1. User Registration" << endl << endl;
			cout << "2. Edit User" << endl << endl;
			cout << "3. Delete User" << endl << endl;
			cout << "4. Users List" << endl << endl;
			cout << "5. Back" << endl << endl;
			cout << "Choose an option: ";
			cin >> op;
		}while(op < 0 || op > 5);
		cin.ignore();

		if(op == 1){
            regUser();
		}

		if(op == 2){
            editUser();
		}

		if(op == 3){
            deleteUser();
		}

		if(op == 4){
            checkUser();
		}
		if(op == 5){
            init();
		}
	}

	if(op == 3){
        exit(0);
	}
}

void adminOptions(){
	int op, error = 0;
	string usr, key;

	do{
		system("cls");
		cout << "\t\t\t\t\t     =======================================" << endl;
		cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
		cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
		cout << "OPTIONS" << endl;
		cout << "---------" << endl << endl;
		cout << "1. Order Food" << endl << endl;
		cout << "2. Back" << endl << endl;
		cout << "Choose an option: ";
		cin >> op;
	}while(op < 0 || op > 2);
	cin.ignore();

	if(op == 1) food();
	else init();
}

void guestOptions(){
	int op, error = 0;
	string usr, key;

	do{
		system("cls");
		cout << "\t\t\t\t\t     =======================================" << endl;
		cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
		cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
		cout << "OPTIONS" << endl;
		cout << "---------" << endl << endl;
		cout << "1. Menu" << endl << endl;
		cout << "2. Payment Information" << endl << endl;
		cout << "3. Discount Information" << endl << endl;
		cout << "4. Back" << endl << endl;
		cout << "Choose an option: ";
		cin >> op;
	}while(op < 0 || op > 4);
	cin.ignore();

	if(op == 1) showMenu();
	if(op == 2) showPayments();
	if(op == 3) showDiscount();
	if(op == 4) init();
}

void showMenu(){
        system("cls");
        cout << "\t\t\t\t\t     =======================================" << endl;
        cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
        cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
        cout << "FOOD MENU" << endl;
        cout << "--------------" << endl << endl;
        cout << "- Combo Burger, Chips and Drink                  $10" << endl << endl;
        cout << "- Combo Hot Dog, Chips and Drink                      $10" << endl << endl;
        cout << "- Fish and Chips With Drink                         $10" << endl << endl;
        system("pause");
        guestOptions();
}

void showPayments(){
        system("cls");
        cout << "\t\t\t\t\t     =======================================" << endl;
        cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
        cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
        cout << "PAYMENT OPTIONS" << endl;
        cout << "-----------------" << endl << endl;
        cout << "Payment Methods:" << endl << endl;
        cout << "1. Card Payment" << endl << endl;
        cout << "2. Cash Payment" << endl << endl;
        system("pause");
        guestOptions();
}

void showDiscount(){
        system("cls");
        cout << "\t\t\t\t\t     =======================================" << endl;
        cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
        cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
        cout << "DISCOUNT INFORMATION" << endl;
        cout << "----------------------------" << endl << endl;
        cout << ">> Students that order the whole month will get a discount of 10%:" << endl << endl;
        system("pause");
        guestOptions();
}

void login(){
    int error = 0, aux = 0;
    string name, key, user, pass;
    ifstream file;
    int type;

    do{
        system("cls");
        cout << "\t\t\t\t\t     =======================================" << endl;
        cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
        cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
        cout << "SYSTEM LOGIN" << endl;
        cout << "-----------------" << endl << endl;
        cout << "Enter Username:    ";
        getline(cin, user);

        cout << endl;
        cout << "Enter Password: ";
        getline(cin, pass);


        file.open("databaseUsrs.txt", ios::in); //Abrimos el file en modo lectura

        if(file.fail()){
            cout << "Error, file can't be opened." << endl;
            system("pause");
            init();
        }

        file >> name;
        while(!file.eof()){
            file >> key;
            file >> type;

            if(user == name && pass == key){
                aux++;
                cout << endl;
                cout << "MESSAGE: Data entered correct. Logining ..." << endl;
                file.close();
                system("pause");

                if(type == 1){
                    adminOptions();
                }
                else{
                    guestOptions();
                }
            }
            file >> name;
        }

        if(aux == 0){
            error++;

            if(error == 3){
                cout << endl;
                cout << "MESSAGE: Attention! You have exceeded the number of attempts. The program will close..." << endl;
                system("pause");
                exit(0);
            }

            else{
                cout << endl;
                cout << "MESSAGE: Attention! The data entered is incorrect. Try again ..." << endl;
                system("pause");
                file.close();
            }
        }
    }while(error != 3);
}


void regUser(){
	string name, key;
	int type, aux, op;

    ofstream file;
    file.open("databaseUsrs.txt",ios::app);

    if(file.fail()){
        cout << "Error, file can't be opened." << endl;
        system("pause");
        init();
    }

    do{
        system("cls");
        cout << "\t\t\t\t\t     =======================================" << endl;
        cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
        cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
        cout << "USER REGISTRATION" << endl;
        cout << "-----------------" << endl << endl;
        cout << endl;
        cout << "Enter User Name: ";
        getline(cin, name);
        aux = veriUser(name);

        if(aux == 1){
            cout << endl;
            cout << "MESSAGE: Error! This User Name has been already registered." << endl;
            system("pause");
        }
    }while(aux == 1);


    cout << endl;
    cout << "Enter a password: ";
    getline(cin, key);
    cout << endl;


    cout << endl;
    cout << "Choose a user type to be registered" << endl << endl;
    cout << "1. Administrator" << endl << endl;
    cout << "2. Client" << endl << endl;
    do{
        cout << "Choose an option: ";
        cin >> op;
    }while(op < 0 || op > 2);

    if(op == 1){
        type = 1;
    }
    else{
        type = 2;
    }

    file << name << " " << key << " " << type << "\n";
    file.close();

    cout << endl;
    cout << "MESSAGE: User succesfully registered." << endl;
    system("pause");
    init();

}

int veriUser(string user){
    ifstream file;
    int qtd = 0, aux = 0;
    string usrs[50];
    string name, key;

    file.open("databaseUsrs.txt", ios::in);

    if(file.fail()){
        cout << "Error, file can't be opened." << endl;
        system("pause");
        init();
    }

    file >> name;
    while(!file.eof()){
        file >> key;

        usrs[qtd] = name;
        qtd++;

        file >> name;
    }
    file.close();

    for(int i = 0; i < qtd && aux == 0; i++){
            if(user == usrs[i]){
                aux = 1;
            }
    }

    return aux;
}

void editUser(){
    ifstream file;
    int qtd = 0, exist = 0;
    string usrs[50];
    string keys[50];
    int types[50];

    string name, key, user;
    int type, op;

    file.open("databaseUsrs.txt", ios::in);

    if(file.fail()){
        cout << "Error, file can't be opened." << endl;
        system("pause");
        init();
    }


    file >> name;
    while(!file.eof()){
        file >> key;
        file >> type;

        usrs[qtd] = name;
        keys[qtd] = key;
        types[qtd] = type;
        qtd++;

        file >> name;
    }
    file.close();

    system("cls");
    cout << "\t\t\t\t\t     =======================================" << endl;
    cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
    cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
    cout << "EDIT USER" << endl;
    cout << "-----------------" << endl << endl;
    cout << "Enter User Name: ";
    getline(cin, user);

    for(int i = 0; i < qtd && exist == 0; i++){
            if(user == usrs[i]){
                do{
                    system("cls");
                    cout << "\t\t\t\t\t     =======================================" << endl;
                    cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
                    cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
                    cout << "EDIT USER" << endl;
                    cout << "-----------------" << endl << endl;
                    cout << "1. Change User Name" << endl << endl;
                    cout << "2. Change Password" << endl << endl;
                    cout << "Enter an option: ";
                    cin >> op;
                }while(op < 0 || op > 2);
                cin.ignore();

                if(op == 1){
                    system("cls");
                    cout << "\t\t\t\t\t     =======================================" << endl;
                    cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
                    cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
                    cout << "EDIT USER NAME" << endl;
                    cout << "---------------------------" << endl << endl;
                    cout << "Enter a new user name: ";
                    getline(cin, usrs[i]);
                    cout << endl;
                    cout << "MESSAGE: User name succesfully updated." << endl;
                    system("pause");
                }

                else{
                    system("cls");
                    cout << "\t\t\t\t\t     =======================================" << endl;
                    cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
                    cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
                    cout << "EDIT USER PASSWORD" << endl;
                    cout << "---------------------------" << endl << endl;
                    cout << "Enter new password: ";
                    getline(cin, keys[i]);
                    cout << endl;
                    cout << "MESSAGE: Password succesfylly updated." << endl;
                    system("pause");
                }

                ofstream aux("Auxiliar.txt",ios::out);
                if(aux.fail()){
                    cout << "File can not be opened." << endl;
                    exit(1);
                }

                if(!aux.eof()){
                    for(int i = 0; i < qtd; i++){
                        aux << usrs[i] << " " << keys[i] << " " << types[i] << "\n";
                    }
                }
                aux.close();
                remove("databaseUsrs.txt");
                rename("Auxiliar.txt", "databaseUsrs.txt");

                exist = 1;
            }
    }

    if(exist == 0){
        cout << endl;
        cout << "MESSAGE: User name could not be found." << endl;
        system("pause");
    }


    init();
}

void deleteUser(){
    ifstream file;
    int qtd = 0, exist = 0, j;
    string usrs[50];
    string keys[50];
    int types[50];

    string name, key, user;
    int type, op;

    file.open("databaseUsrs.txt", ios::in);

    if(file.fail()){
        cout << "Error, file can't be opened." << endl;
        system("pause");
        init();
    }

    system("cls");
    cout << "\t\t\t\t\t     =======================================" << endl;
    cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
    cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
    cout << "DELETE USER" << endl;
    cout << "-----------------" << endl << endl;
    cout << "Enter User Name: ";
    getline(cin, user);

    file >> name;
    while(!file.eof()){
        file >> key;
        file >> type;

        if(user != name){
            usrs[qtd] = name;
            keys[qtd] = key;
            types[qtd] = type;
            qtd++;
        }
        else{
            exist = 1;
        }


        file >> name;
    }
    file.close();


    if(exist == 0){
        cout << endl;
        cout << "MESSAGE: User not found." << endl;
        system("pause");
    }

    else{
        ofstream aux;
        aux.open("Auxiliar.txt",ios::out);

        if(aux.fail()){
            cout << "Error, file can't be opened." << endl;
            system("pause");
            init();
        }

        else{
            for(int i = 0; i < qtd; i++){
                aux << usrs[i] << " " << keys[i] << " " << types[i] << "\n";
            }
            aux.close();
        }

        remove("databaseUsrs.txt");
        rename("Auxiliar.txt", "databaseUsrs.txt");
        cout << endl;
        cout << "MESSAGE: User succesfully deleted." << endl;
        system("pause");
    }


    init();
}

void checkUser(){
    ifstream file;
    int qtd = 0, aux = 0, type;
    string name, key;

    file.open("databaseUsrs.txt", ios::in);

    if(file.fail()){
        cout << "Error, file can't be opened." << endl;
        system("pause");
        init();
    }

    system("cls");
    cout << "\t\t\t\t\t     =======================================" << endl;
    cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
    cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
    cout << "REGISTERED USERS" << endl;
    cout << "--------------------" << endl << endl;
    cout << "USER NAME                                         TYPE OF USER" << endl;
    cout << "--------------------------------------------------------------" << endl;

    file >> name;
    while(!file.eof()){
        file >> key;
        file >> type;

        cout << name;
        int user_length = name.size();

        for(int i = 0; i < (47 - user_length); i ++){
                cout << " ";
        }

        if(type == 1){
            cout << "Administrator";
        }
        else{
            cout << "Client";
        }

        cout << endl;
        file >> name;
    }

    file.close();
    cout << endl << endl;
    system("pause");
    init();
}

void food(){
    float subtotal = 0, total = 0, discount = 0;
    int op, qtd, advance, combo1 = 0, combo2 = 0, combo3 = 0;
    string type;

    do{
        do{
            system("cls");
            cout << "\t\t\t\t\t     =======================================" << endl;
            cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
            cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
            cout << "FOOD MENU" << endl;
            cout << "--------------" << endl << endl;
            cout << "1. Combo Burger, Chips and Drink                  $10" << endl << endl;
            cout << "2. Combo Hot Dog, Chips and Drink                      $10" << endl << endl;
            cout << "3. Fish and Chips With Drink                         $10" << endl << endl;
            cout << "Enter an option: ";
            cin >> op;
        }while(op < 1 || op > 3);

        cout << endl;
        cout << "Enter Quantity: ";
		cin >> qtd;

    	switch(op){
			case 1:
				subtotal = qtd * 10.00;
				combo1 += qtd;
			break;

			case 2:
				subtotal = qtd * 10.00;
				combo2 += qtd;
			break;

			case 3:
				subtotal = qtd * 10.00;
				combo3 += qtd;
			break;
		}

		cout << endl;
		cout << "Do you want to order more? Enter 1 (Yes) / 2 (No) : ";
		cin >> advance;
	}while(advance == 1);

	do{
        system("cls");
        cout << "\t\t\t\t\t     =======================================" << endl;
        cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
        cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
        cout << "DISCOUNT" << endl;
        cout << "---------" << endl << endl;
        cout << "Would you like to order for an entire month?" << endl << endl;
        cout << "1. Yes" << endl << endl;
        cout << "2. No" << endl << endl;
        cout << "Enter an option: ";
        cin >> op;
    }while(op < 1 || op > 2);

	if(op == 1){
        discount = (subtotal*10) / 100;
	}
	else{
        discount = 0;
	}

	total = subtotal - discount;

	do{
        system("cls");
        cout << "\t\t\t\t\t     =======================================" << endl;
        cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
        cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
        cout << "Payment Method" << endl;
        cout << "---------" << endl << endl;
        cout << "Choose Payment Method" << endl << endl;
        cout << "1. Card" << endl << endl;
        cout << "2. Cash" << endl << endl;
        cout << "Enter an option";
        cin >> op;
    }while(op < 1 || op > 2);

    if(op == 1){
        type = "Card";
	}
	else{
        type = "Cash";
	}

    ofstream file;
    file.open("Invoice.txt",ios::out);
    if(file.fail()){
        cout << "File can not be opened." << endl;
        exit(1);
    }


    system("cls");
    cout << "\t\t\t\t\t     =======================================" << endl;
    cout << "\t\t\t\t\t            SCHOOL LUNCH ORDERING SYSTEM  " << endl;
    cout << "\t\t\t\t\t     =======================================" << endl << endl << endl;
    cout << endl << endl;
    cout    << "INVOICE" << endl;
    file << "INVOICE" << endl;
    cout    << "-------" << endl << endl;
    file << "-------" << endl << endl;
    cout    << "DISHES                                            QUANTITY" << endl;
    file << "DISHES                                            QUANTITY" << endl;
    cout    << "----------------------------------------------------------" << endl;
    file << "----------------------------------------------------------" << endl;
    cout    << "Combo Burger, Chips and Drink....................... " << combo1 << endl;
    file << "Combo Burger, Chips and Drink....................... " << combo1 << endl;
    cout    << "Combo Hot Dog, Chips and Drink...................... " << combo2 << endl;
    file << "Combo Hot Dog, Chips and Drink...................... " << combo2 << endl;
    cout    << "Fish and Chips With Drink........................... " << combo3 << endl;
    file << "Fish and Chips With Drink........................... " << combo3 << endl;
    cout    << ".....................................Subtotal:       $" << subtotal << endl ;
    file << ".....................................Subtotal:       $" << subtotal << endl;
    cout    << ".....................................Discount:      $" << discount << endl;
    file << ".....................................Discount:      $" << discount << endl ;
    cout    << ".....................................Total Payment:  $" << total << endl;
    file << ".....................................Total Payment:  $" << total << endl;
    cout    << ".....................................Payment Method:   " << type << endl << endl;
    file << ".....................................Payment Method:   " << type << endl << endl ;
    cout << endl << "Thanks for choosing us!!!" << endl << endl;

    file.close();
    system("pause");
    init();
}
